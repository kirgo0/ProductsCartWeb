
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@40,400,0,0" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />

<div draggable="true" class="@Class @(Product is null ? "" : IsSelected ? "bg-amber-200" : "bg-gray-200") relative rounded p-3 shadow-sm" @ondblclick="DoubleClick" @ondrag="StartDrag" @ondrop="Drop" ondragover="event.preventDefault();"
    @onmouseenter="() => ShowDeleteBtn = true" @onmouseleave="() => ShowDeleteBtn = false">
    @if (Product is not null)
    {
        @if(ShowDeleteBtn)
        {
            <button type="button" class="absolute right-0 top-0 bg-red-500 text-white" @onclick="Delete">
                X
            </button>
        }
        <div class="flex h-full flex-col justify-between">
            <div class="w-full">
                <div class="font-bold">@(Product.Name)</div>
                <div class="text-balance break-words text-xs">@(Product.Description)</div>
            </div>
            <div>@Product.Price UAH</div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public Product Product { get; set; }

    [Parameter]
    public bool IsSelected { get; set; } = false;

    [Parameter]
    public int Index { get; set; } = 0;
    [Parameter]
    public EventCallback<int> OnDoubleClickAction { get; set; }
    [Parameter]
    public EventCallback<Product> DeleteAction { get; set; }
    [Parameter]
    public EventCallback<DragAndDropEventArgs> InsertItemAction { get; set; }

    private bool ShowDeleteBtn { get; set; } = false;

    private async Task DoubleClick()
    {
        await OnDoubleClickAction.InvokeAsync(Index);
    }

    private async Task Drop()
    {
        if(Product is not null)
        {
            await InsertItemAction.InvokeAsync(new DragAndDropEventArgs(Index, Product, async () => await Delete()));
        }
    }

    private void StartDrag()
    {
        Console.WriteLine("_START__");
    }

    private async Task Delete()
    {
        if (Product is not null)
        {
            await DeleteAction.InvokeAsync(Product);
        }
    }
}
